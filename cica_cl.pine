// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © CharLi0t

//@version=6
indicator(title="Composite Indicator (CCI + ATR) [CharLi0t]", shorttitle = "CICA_CL", overlay=false)

// Input Parameters
cci_length = input(20, title="CCI Length")
cci_threshold = input(100, title="CCI Threshold")
atr_length = input(14, title="ATR Length")
atr_buy_multiplier = input(1.0, title="ATR Multiplier for Buy Signal")  // Separate multiplier for Buy Signal
atr_sell_multiplier = input(0.95, title="ATR Multiplier for Sell Signal")  // Separate multiplier for Sell Signal
atr_multiplier = input(1.5, title="ATR Multiplier for Stop Loss")  // Multiplier for calculating stop loss

// CCI Calculation
cciSource = (high + low + close) / 3  // Typical price used for CCI calculation
cci = ta.cci(cciSource, cci_length)

// ATR Calculation
atr = ta.atr(atr_length)  // Average True Range to measure market volatility

// Calculate SMA of ATR with user-defined length
atrSma = ta.sma(atr, atr_length)  // ATR SMA now uses a custom input length

// Buy/Sell Conditions with ATR Filter
// Buy Signal: Uses separate ATR multiplier for Buy
buySignal = ta.crossover(cci, -cci_threshold) and (atr > atr_buy_multiplier * atrSma)  

// Sell Signal: Uses separate ATR multiplier for Sell
sellSignal = ta.crossunder(cci, cci_threshold) and (atr > atr_sell_multiplier * atrSma) 

// Stop Loss Calculation (Example usage of atr_multiplier)
long_stop_loss = low - (atr * atr_multiplier)  // Stop loss for long positions
short_stop_loss = high + (atr * atr_multiplier)  // Stop loss for short positions

// /*
// Why Adjust the Weight for Each Side?
// 1. Market Characteristics:
//    - Crypto markets typically sell off sharply but climb gradually. 
//    - Therefore, the Sell Signal is designed to react faster to volatility (lower ATR threshold).
//    - The Buy Signal, on the other hand, requires more confirmation (higher ATR threshold) to avoid false entries during slow upward trends.

// 2. Signal Filtering:
//    - Adjusting ATR thresholds ensures that only significant movements are considered for Buy and Sell signals, reducing noise in the market.
//    - Higher thresholds for Buy help avoid premature entries during choppy or sideways markets.

// 3. Optimized for Crypto Volatility:
//    - By tailoring ATR thresholds to each direction, the strategy is better aligned with typical crypto behavior: fast dumps and slow recoveries.

// 4. Stop Loss Integration:
//    - The `atr_multiplier` is now used to calculate a dynamic stop loss based on market volatility.
// */

// Plot Buy/Sell Signals with Triangles
plotshape(buySignal, style=shape.labelup, location=location.belowbar, color=color.green, title="Buy Signal", text="B", textcolor = color.white)
plotshape(sellSignal, style=shape.labeldown, location=location.abovebar, color=color.red, title="Sell Signal", text="S", textcolor = color.white)

// Plot Stop Loss Lines (Optional for Visualization)
plot(buySignal ? long_stop_loss : na, color=color.green, style=plot.style_line, title="Long Stop Loss")
plot(sellSignal ? short_stop_loss : na, color=color.red, style=plot.style_line, title="Short Stop Loss")
